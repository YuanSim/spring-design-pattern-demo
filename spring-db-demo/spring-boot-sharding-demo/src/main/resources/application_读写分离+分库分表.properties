mybatis.type-aliases-package=com.yuansim.mapper


spring.shardingsphere.datasource.names=master0,master1,master0slave0,master0slave1,master1slave0,master1slave1

spring.shardingsphere.datasource.master0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master0.url=jdbc:mysql://223.247.199.5:13306/master0?allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.master0.username=root
spring.shardingsphere.datasource.master0.password=iMycar^2020!@%

spring.shardingsphere.datasource.master0slave0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master0slave0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master0slave0.url=jdbc:mysql://223.247.199.5:13306/master0slave0?allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.master0slave0.username=root
spring.shardingsphere.datasource.master0slave0.password=iMycar^2020!@%
spring.shardingsphere.datasource.master0slave1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master0slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master0slave1.url=jdbc:mysql://223.247.199.5:13306/master0slave1?allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.master0slave1.username=root
spring.shardingsphere.datasource.master0slave1.password=iMycar^2020!@%

spring.shardingsphere.datasource.master1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master1.url=jdbc:mysql://223.247.199.5:13306/master1?allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.master1.username=root
spring.shardingsphere.datasource.master1.password=iMycar^2020!@%

spring.shardingsphere.datasource.master1slave0.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1slave0.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master1slave0.url=jdbc:mysql://223.247.199.5:13306/master1slave0?allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.master1slave0.username=root
spring.shardingsphere.datasource.master1slave0.password=iMycar^2020!@%
spring.shardingsphere.datasource.master1slave1.type=com.alibaba.druid.pool.DruidDataSource
spring.shardingsphere.datasource.master1slave1.driver-class-name=com.mysql.cj.jdbc.Driver
spring.shardingsphere.datasource.master1slave1.url=jdbc:mysql://223.247.199.5:13306/master1slave1?allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
spring.shardingsphere.datasource.master1slave1.username=root
spring.shardingsphere.datasource.master1slave1.password=iMycar^2020!@%

#指定t_order表的数据分布情况，配置数据节点
spring.shardingsphere.sharding.tables.orders.actual-data-nodes=ds$->{0..1}.orders$->{1..2}
# 指定t_order表的分片策略，分片策略包括分片键和分片算法
spring.shardingsphere.sharding.tables.orders.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.orders.table-strategy.inline.algorithm-expression=orders$->{id % 2 + 1}
# 指定t_order表的主键 & 生成策略为SNOWFLAKE
spring.shardingsphere.sharding.tables.orders.key-generator.column=id
spring.shardingsphere.sharding.tables.orders.key-generator.type=SNOWFLAKE
spring.shardingsphere.sharding.tables.orders_item.actual-data-nodes=ds$->{0..1}.orders_item$->{1..2}
spring.shardingsphere.sharding.tables.orders_item.table-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.tables.orders_item.table-strategy.inline.algorithm-expression=orders_item$->{id % 2 + 1}
spring.shardingsphere.sharding.tables.orders_item.key-generator.column=id
spring.shardingsphere.sharding.tables.orders_item.key-generator.type=SNOWFLAKE

#绑定表规则列表
spring.shardingsphere.sharding.binding-tables=orders,orders_item
#广播表规则列表
#spring.shardingsphere.sharding.broadcast-tables=t_config

# 指定分库策略，分片策略包括分片键和分片算法
spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=id
spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{id % 2}

# 主从配置
spring.shardingsphere.sharding.master-slave-rules.ds0.master-data-source-name=master0
spring.shardingsphere.sharding.master-slave-rules.ds0.slave-data-source-names=master0slave0,master0slave1
spring.shardingsphere.sharding.master-slave-rules.ds1.master-data-source-name=master1
spring.shardingsphere.sharding.master-slave-rules.ds1.slave-data-source-names=master1slave0,master1slave1
spring.shardingsphere.masterslave.load-balance-algorithm-type=round_robin


spring.shardingsphere.props.sql.show=true






